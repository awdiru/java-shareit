DROP TABLE IF EXISTS PUBLIC.BOOKINGS;
DROP TABLE IF EXISTS PUBLIC.ITEMS;
DROP TABLE IF EXISTS PUBLIC.ITEMREQUESTS;
DROP TABLE IF EXISTS PUBLIC.USERS;

CREATE TABLE PUBLIC.USERS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR_IGNORECASE(50) NOT NULL,
	EMAIL VARCHAR_IGNORECASE(200) NOT NULL,
	CONSTRAINT USERS_PK PRIMARY KEY (ID),
	CONSTRAINT USERS_UNIQUE UNIQUE (EMAIL)
);

CREATE TABLE PUBLIC.ITEMREQUESTS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	DESCRIPTION VARCHAR_IGNORECASE(1000) NOT NULL,
	REQUESTOR INTEGER NOT NULL,
	CREATED TIMESTAMP NOT NULL,
	CONSTRAINT ITEMREQUEST_PK PRIMARY KEY (ID),
	CONSTRAINT ITEMREQUESTS_USERS_FK FOREIGN KEY (REQUESTOR) REFERENCES PUBLIC.USERS(ID)
);

CREATE TABLE PUBLIC.ITEMS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR_IGNORECASE(200) NOT NULL,
	DESCRIPTION VARCHAR_IGNORECASE(1500),
	OWNER INTEGER NOT NULL,
	NUMBER_OF_RENTALS INTEGER DEFAULT 0,
	AVAILABLE BOOLEAN DEFAULT false,
	REQUEST INTEGER,
	CONSTRAINT NEWTABLE_PK PRIMARY KEY (ID),
	CONSTRAINT ITEMS_USERS_FK FOREIGN KEY (OWNER) REFERENCES PUBLIC.USERS(ID),
	CONSTRAINT ITEMS_ITEMREQUESTS_FK FOREIGN KEY (REQUEST) REFERENCES PUBLIC.ITEMREQUESTS(ID)
);

CREATE TABLE PUBLIC.BOOKINGS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	"START" TIMESTAMP NOT NULL,
	"END" TIMESTAMP,
	ITEM INTEGER NOT NULL,
	BOOKER INTEGER NOT NULL,
	STATUS VARCHAR_IGNORECASE NOT NULL,
	CONSTRAINT BOOKINGS_PK PRIMARY KEY (ID),
	CONSTRAINT BOOKINGS_USERS_FK FOREIGN KEY (BOOKER) REFERENCES PUBLIC.USERS(ID),
	CONSTRAINT BOOKINGS_ITEMS_FK FOREIGN KEY (ITEM) REFERENCES PUBLIC.ITEMS(ID)
);